{"0": {
    "doc": "About",
    "title": "About",
    "content": "## De-Identification by Design: Creating Ethical Data Derivatives with Python Research and proprietary data often contain personally identifiable information, with variables that reveal details about the lives of individuals and may have been collected without the person’s knowledge or consent. Datasets aggregated at the individual level often interest social science scholars, yet such data poses a risk of identification and create an ethical dilemma for curators. While some types of information and data are legally protected, other social data, such as home mortgage files, voter registration files, and tax parcel records are public and are often augmented with modeled indicators, such as religious belief or personal income, that may not represent the reality of people’s lives. Library information and data specialists must develop infrastructure, workflows, and policies to ensure the ethical stewardship and use of these datasets. ### Workshop Learning Objectives 1. Develop fluency with generating random samples in order to make analysis with large files more manageable 2. Know how to assess the identification risk of specific variables within a dataset in order to protect the identity of human subjects 3. Create a Jupyter Notebook workflow that enables cleaning, redacting, and sharing data for research use 4. Learn some fundamental Pandas features for exploring, cleaning, and transforming data ",
    "url": "/iassist2021/about/",
    "relUrl": "/about/"
  },"1": {
    "doc": "Setup",
    "title": "Setup",
    "content": "## Getting ready for the workshop In our workshop, we will be using Python 3 and the Jupyter Notebook environment in order to work with our sample data. We highly encourage participants to install everything in advance of the session and download the sample files, if possible. If anyone gets stuck, don't hesitate to reach out to the workshop conveners, Andrew Battista, Katie Wissel, and Daniel Hickey. ### Download and Install Python with the Anaconda 3 distribution Although there are many ways to install and run Python, and still many more ways to install the Anaconda 3 distribution and accompanying libraries, we are going to recommend using the appropriate [graphical installer from Anaconda](https://docs.anaconda.com/anaconda/install/). Once you have downloaded the install package, follow the instructions. If you're installing on a Mac OS, [pay attention to the instructions and screenshots](https://docs.anaconda.com/anaconda/install/mac-os/). Specifically, when you get to step 6, select \"install for me only\" and install it in a location on your personal user account. Similarly, if you are [installing on Windows, select \"just me\"](https://docs.anaconda.com/anaconda/install/windows/). We recommend following the advice of not adding Anaconda to your PATH environment variable. ### Install the pyjanitor library Our workshop will be using several libraries that come standard with the Anaconda distribution, but one does not: [pyjanitor](https://pyjanitor.readthedocs.io/installation.html). In order to install it, we recommend using the conda command. Open up a bash prompt, either Terminal for Mac or Git Bash or Powershell for Windows and run: ``` conda install pyjanitor -c conda-forge ``` ### Troubleshooting Let us know in advance of the workshop if you have questions. ",
    "url": "/iassist2021/setup/",
    "relUrl": "/setup/"
  }
}
